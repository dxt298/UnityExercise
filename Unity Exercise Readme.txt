Rules:
	First the player chooses how many waves/trials they would like to do, and then start the game.  The player is then shown their target object on screen.  Whenever this target shows up again, they must press Space.  Points are awarded to the player for fast reaction times.  However, to deter simply mashing the Spacebar, points are deducted for wrong answers.  Furthermore, after pressing space on a right answer, pressing space will not give more points.  This does not apply to wrong answers, as you can keep pressing space on them, causing you to lose points rapidly.

Scoring:
	In order to reward the player with a fast reaction time, a (very) simple scoring system was used.  As such, a base of 1 divided by the reaction time is used.  I personally like seeing big number scores (but having too big numbers is pointless), so that number is multiplied by an arbitrary number of 100.  If the player was wrong, the same system is used to subtract from the score, but is multiplied by a lesser number.
	The reason why the same base is used is because if you're correct, the faster you are means a higher number (1 divided by an insanely small number).  If you're wrong, this same high number will penalize you greatly.

Etc:
	I've found a slightly annoying thing with Unity.  The assets currently have the Object script attatched to them, so that they can have the bool winner value (signifying whether or not they are the target for that wave).  However, I find that sometimes when I start up unity and run the game, targets will not have their bool toggled, and everything ends up not being the target.  As such I've had to remove the component, and reattach the script every other time I start Unity.  If while running the project and it so happens that you never get it right even when the target shows up, please take this into consideration.  The web player should work every time though.
	Assets were used because I was looking around on my computer for a lot of simple related sprites, and I happened to find some pictures I had edited to have transparent backgrounds quite a while ago.  These are not my drawings (this submission would have taken a lot longer if they were), and all credit goes to the creator: http://www.pixiv.net/member_illust.php?mode=medium&illust_id=33724651